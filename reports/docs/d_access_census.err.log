Traceback (most recent call last):
  File "/home/mmann1123/miniconda3/envs/pygis/lib/python3.11/site-packages/jupyter_core/utils/__init__.py", line 154, in wrapped
    asyncio.get_running_loop()
RuntimeError: no running event loop

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/mmann1123/miniconda3/envs/pygis/lib/python3.11/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/home/mmann1123/miniconda3/envs/pygis/lib/python3.11/site-packages/nbclient/client.py", line 1319, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/mmann1123/miniconda3/envs/pygis/lib/python3.11/site-packages/jupyter_core/utils/__init__.py", line 158, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/mmann1123/miniconda3/envs/pygis/lib/python3.11/asyncio/base_events.py", line 653, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/home/mmann1123/miniconda3/envs/pygis/lib/python3.11/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/home/mmann1123/miniconda3/envs/pygis/lib/python3.11/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/home/mmann1123/miniconda3/envs/pygis/lib/python3.11/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# Obtain Census variables from the 2019 ACS at the tract level for the Commonwealth of Virginia
# C17002_001E: count of ratio of income to poverty in the past 12 months (total)
# C17002_002E: count of ratio of income to poverty in the past 12 months (< 0.50)
# C17002_003E: count of ratio of income to poverty in the past 12 months (0.50 - 0.99)
# B01003_001E: total population
# Sources: https://api.census.gov/data/2019/acs/acs5/variables.html
va_census = tc.get_acs(
    geography="tract",
    variables=["C17002_001E", "C17002_002E", "C17002_003E", "B01003_001E"],
    state="VA",
    year=2019,
    output="wide"
)
------------------

----- stdout -----
Getting data from the 2015-2019 5-year ACS
------------------

[31m---------------------------------------------------------------------------[39m
[31mJSONDecodeError[39m                           Traceback (most recent call last)
[36mFile [39m[32m~/miniconda3/envs/pygis/lib/python3.11/site-packages/requests/models.py:974[39m, in [36mResponse.json[39m[34m(self, **kwargs)[39m
[32m    973[39m [38;5;28;01mtry[39;00m:
[32m--> [39m[32m974[39m     [38;5;28;01mreturn[39;00m [43mcomplexjson[49m[43m.[49m[43mloads[49m[43m([49m[38;5;28;43mself[39;49m[43m.[49m[43mtext[49m[43m,[49m[43m [49m[43m*[49m[43m*[49m[43mkwargs[49m[43m)[49m
[32m    975[39m [38;5;28;01mexcept[39;00m JSONDecodeError [38;5;28;01mas[39;00m e:
[32m    976[39m     [38;5;66;03m# Catch JSON-related errors and raise as requests.JSONDecodeError[39;00m
[32m    977[39m     [38;5;66;03m# This aliases json.JSONDecodeError and simplejson.JSONDecodeError[39;00m

[36mFile [39m[32m~/miniconda3/envs/pygis/lib/python3.11/json/__init__.py:346[39m, in [36mloads[39m[34m(s, cls, object_hook, parse_float, parse_int, parse_constant, object_pairs_hook, **kw)[39m
[32m    343[39m [38;5;28;01mif[39;00m ([38;5;28mcls[39m [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m [38;5;129;01mand[39;00m object_hook [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m [38;5;129;01mand[39;00m
[32m    344[39m         parse_int [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m [38;5;129;01mand[39;00m parse_float [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m [38;5;129;01mand[39;00m
[32m    345[39m         parse_constant [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m [38;5;129;01mand[39;00m object_pairs_hook [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m [38;5;129;01mand[39;00m [38;5;129;01mnot[39;00m kw):
[32m--> [39m[32m346[39m     [38;5;28;01mreturn[39;00m [43m_default_decoder[49m[43m.[49m[43mdecode[49m[43m([49m[43ms[49m[43m)[49m
[32m    347[39m [38;5;28;01mif[39;00m [38;5;28mcls[39m [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m:

[36mFile [39m[32m~/miniconda3/envs/pygis/lib/python3.11/json/decoder.py:337[39m, in [36mJSONDecoder.decode[39m[34m(self, s, _w)[39m
[32m    333[39m [38;5;250m[39m[33;03m"""Return the Python representation of ``s`` (a ``str`` instance[39;00m
[32m    334[39m [33;03mcontaining a JSON document).[39;00m
[32m    335[39m 
[32m    336[39m [33;03m"""[39;00m
[32m--> [39m[32m337[39m obj, end = [38;5;28;43mself[39;49m[43m.[49m[43mraw_decode[49m[43m([49m[43ms[49m[43m,[49m[43m [49m[43midx[49m[43m=[49m[43m_w[49m[43m([49m[43ms[49m[43m,[49m[43m [49m[32;43m0[39;49m[43m)[49m[43m.[49m[43mend[49m[43m([49m[43m)[49m[43m)[49m
[32m    338[39m end = _w(s, end).end()

[36mFile [39m[32m~/miniconda3/envs/pygis/lib/python3.11/json/decoder.py:355[39m, in [36mJSONDecoder.raw_decode[39m[34m(self, s, idx)[39m
[32m    354[39m [38;5;28;01mexcept[39;00m [38;5;167;01mStopIteration[39;00m [38;5;28;01mas[39;00m err:
[32m--> [39m[32m355[39m     [38;5;28;01mraise[39;00m JSONDecodeError([33m"[39m[33mExpecting value[39m[33m"[39m, s, err.value) [38;5;28;01mfrom[39;00m[38;5;250m [39m[38;5;28;01mNone[39;00m
[32m    356[39m [38;5;28;01mreturn[39;00m obj, end

[31mJSONDecodeError[39m: Expecting value: line 2 column 1 (char 1)

During handling of the above exception, another exception occurred:

[31mJSONDecodeError[39m                           Traceback (most recent call last)
[36mFile [39m[32m~/Documents/github/pytidycensus/pytidycensus/api.py:150[39m, in [36mCensusAPI.get[39m[34m(self, year, dataset, variables, geography, survey, show_call)[39m
[32m    149[39m [38;5;28;01mtry[39;00m:
[32m--> [39m[32m150[39m     data = [43mresponse[49m[43m.[49m[43mjson[49m[43m([49m[43m)[49m
[32m    151[39m [38;5;28;01mexcept[39;00m json.JSONDecodeError:
[32m    152[39m     [38;5;66;03m# API returned non-JSON content (likely HTML error page)[39;00m

[36mFile [39m[32m~/miniconda3/envs/pygis/lib/python3.11/site-packages/requests/models.py:978[39m, in [36mResponse.json[39m[34m(self, **kwargs)[39m
[32m    975[39m [38;5;28;01mexcept[39;00m JSONDecodeError [38;5;28;01mas[39;00m e:
[32m    976[39m     [38;5;66;03m# Catch JSON-related errors and raise as requests.JSONDecodeError[39;00m
[32m    977[39m     [38;5;66;03m# This aliases json.JSONDecodeError and simplejson.JSONDecodeError[39;00m
[32m--> [39m[32m978[39m     [38;5;28;01mraise[39;00m RequestsJSONDecodeError(e.msg, e.doc, e.pos)

[31mJSONDecodeError[39m: Expecting value: line 2 column 1 (char 1)

During handling of the above exception, another exception occurred:

[31mValueError[39m                                Traceback (most recent call last)
[36mFile [39m[32m~/Documents/github/pytidycensus/pytidycensus/acs.py:286[39m, in [36mget_acs[39m[34m(geography, variables, table, cache_table, year, survey, state, county, zcta, output, geometry, keep_geo_vars, shift_geo, summary_var, moe_level, api_key, show_call, **kwargs)[39m
[32m    283[39m [38;5;28;01mtry[39;00m:
[32m    284[39m     [38;5;66;03m# Remove duplicate print that was moved up to validation section[39;00m
[32m--> [39m[32m286[39m     data = [43mapi[49m[43m.[49m[43mget[49m[43m([49m
[32m    287[39m [43m        [49m[43myear[49m[43m=[49m[43myear[49m[43m,[49m
[32m    288[39m [43m        [49m[43mdataset[49m[43m=[49m[33;43m"[39;49m[33;43macs[39;49m[33;43m"[39;49m[43m,[49m
[32m    289[39m [43m        [49m[43mvariables[49m[43m=[49m[43mall_variables[49m[43m,[49m
[32m    290[39m [43m        [49m[43mgeography[49m[43m=[49m[43mgeo_params[49m[43m,[49m
[32m    291[39m [43m        [49m[43msurvey[49m[43m=[49m[43msurvey[49m[43m,[49m
[32m    292[39m [43m        [49m[43mshow_call[49m[43m=[49m[43mshow_call[49m[43m,[49m
[32m    293[39m [43m    [49m[43m)[49m
[32m    295[39m     [38;5;66;03m# convert to wide if requesting geometry[39;00m

[36mFile [39m[32m~/Documents/github/pytidycensus/pytidycensus/api.py:153[39m, in [36mCensusAPI.get[39m[34m(self, year, dataset, variables, geography, survey, show_call)[39m
[32m    151[39m [38;5;28;01mexcept[39;00m json.JSONDecodeError:
[32m    152[39m     [38;5;66;03m# API returned non-JSON content (likely HTML error page)[39;00m
[32m--> [39m[32m153[39m     [38;5;28;01mraise[39;00m [38;5;167;01mValueError[39;00m(
[32m    154[39m         [33mf[39m[33m"[39m[33mCensus API returned invalid response. [39m[33m"[39m
[32m    155[39m         [33mf[39m[33m"[39m[33mThis usually indicates an invalid API key or malformed request. [39m[33m"[39m
[32m    156[39m         [33mf[39m[33m"[39m[33mResponse content: [39m[38;5;132;01m{[39;00mresponse.text[:[32m200[39m][38;5;132;01m}[39;00m[33m...[39m[33m"[39m
[32m    157[39m     )
[32m    159[39m [38;5;66;03m# Handle API error responses[39;00m

[31mValueError[39m: Census API returned invalid response. This usually indicates an invalid API key or malformed request. Response content: 
<html style="font-size: 14px;">
    <head>
        <title>Invalid Key</title>
        <link rel="icon" type="image/x-icon" href="favicon.ico">
        <link rel="stylesheet" type="text/css" href="ass...

During handling of the above exception, another exception occurred:

[31mException[39m                                 Traceback (most recent call last)
[36mCell[39m[36m [39m[32mIn[4][39m[32m, line 7[39m
[32m      1[39m [38;5;66;03m# Obtain Census variables from the 2019 ACS at the tract level for the Commonwealth of Virginia[39;00m
[32m      2[39m [38;5;66;03m# C17002_001E: count of ratio of income to poverty in the past 12 months (total)[39;00m
[32m      3[39m [38;5;66;03m# C17002_002E: count of ratio of income to poverty in the past 12 months (< 0.50)[39;00m
[32m      4[39m [38;5;66;03m# C17002_003E: count of ratio of income to poverty in the past 12 months (0.50 - 0.99)[39;00m
[32m      5[39m [38;5;66;03m# B01003_001E: total population[39;00m
[32m      6[39m [38;5;66;03m# Sources: https://api.census.gov/data/2019/acs/acs5/variables.html[39;00m
[32m----> [39m[32m7[39m va_census = [43mtc[49m[43m.[49m[43mget_acs[49m[43m([49m
[32m      8[39m [43m    [49m[43mgeography[49m[43m=[49m[33;43m"[39;49m[33;43mtract[39;49m[33;43m"[39;49m[43m,[49m
[32m      9[39m [43m    [49m[43mvariables[49m[43m=[49m[43m[[49m[33;43m"[39;49m[33;43mC17002_001E[39;49m[33;43m"[39;49m[43m,[49m[43m [49m[33;43m"[39;49m[33;43mC17002_002E[39;49m[33;43m"[39;49m[43m,[49m[43m [49m[33;43m"[39;49m[33;43mC17002_003E[39;49m[33;43m"[39;49m[43m,[49m[43m [49m[33;43m"[39;49m[33;43mB01003_001E[39;49m[33;43m"[39;49m[43m][49m[43m,[49m
[32m     10[39m [43m    [49m[43mstate[49m[43m=[49m[33;43m"[39;49m[33;43mVA[39;49m[33;43m"[39;49m[43m,[49m
[32m     11[39m [43m    [49m[43myear[49m[43m=[49m[32;43m2019[39;49m[43m,[49m
[32m     12[39m [43m    [49m[43moutput[49m[43m=[49m[33;43m"[39;49m[33;43mwide[39;49m[33;43m"[39;49m
[32m     13[39m [43m)[49m

[36mFile [39m[32m~/Documents/github/pytidycensus/pytidycensus/acs.py:392[39m, in [36mget_acs[39m[34m(geography, variables, table, cache_table, year, survey, state, county, zcta, output, geometry, keep_geo_vars, shift_geo, summary_var, moe_level, api_key, show_call, **kwargs)[39m
[32m    389[39m     [38;5;28;01mreturn[39;00m df
[32m    391[39m [38;5;28;01mexcept[39;00m [38;5;167;01mException[39;00m [38;5;28;01mas[39;00m e:
[32m--> [39m[32m392[39m     [38;5;28;01mraise[39;00m [38;5;167;01mException[39;00m([33mf[39m[33m"[39m[33mFailed to retrieve ACS data: [39m[38;5;132;01m{[39;00m[38;5;28mstr[39m(e)[38;5;132;01m}[39;00m[33m"[39m)

[31mException[39m: Failed to retrieve ACS data: Census API returned invalid response. This usually indicates an invalid API key or malformed request. Response content: 
<html style="font-size: 14px;">
    <head>
        <title>Invalid Key</title>
        <link rel="icon" type="image/x-icon" href="favicon.ico">
        <link rel="stylesheet" type="text/css" href="ass...

